name: Merge release branch
run-name: "Release: Test and merge the branch ${{ github.ref_name }}"

on:
  push:
    branches:
      - release/*

jobs:      
  qa-test:
    name: QA test on release branch (TODO)
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && !failure() }}
    outputs:
      release_branch: ${{ github.event.workflow_run.outputs.release_branch }}
    steps:            
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Run QA tests (TODO)
        id: run-qa-tests
        run: |
          echo "Running QA tests on branch ${{ github.ref_name }} ..."
          # Replace this line with actual QA tests
          echo "do some test"
          
          # Simulate test success/failure
          # TEST_RESULT=$(( RANDOM % 2 ))
          TEST_RESULT=0
          if [ $TEST_RESULT -eq 0 ]; then
            echo "QA tests passed."
          else
            echo "::error::QA tests failed."
            exit 1
          fi

      - name: Notify success
        id: notify-success
        if: success()
        run: |
          echo "QA tests succeeded. Proceed to the next workflow."

  bump-version:
    name: Update changelog and bump version
    runs-on: ubuntu-latest
    needs: qa-test
    if: ${{ !cancelled() && !failure() }}
    env:
      GIT_AUTHOR_NAME: github-actions[bot]
      GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
      GIT_COMMITTER_NAME: github-actions[bot]
      GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
          
      - name: Extract version number from branch name
        id: get-version
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/release\/v//')
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Update version.txt
        run: |
          echo "${{ env.version }}" > version.txt
          git add version.txt
          git commit -m "chore: Bump version to v${{ env.version }}"

      - name: Push changes to release branch
        run: |
          git push origin "${{ github.ref_name }}"

  release-merge:
    name: Merge Release Branch to main and develop
    runs-on: ubuntu-latest
    needs: bump-version
    if: ${{ !cancelled() && !failure() }}
    env:
      GIT_AUTHOR_NAME: github-actions[bot]
      GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
      GIT_COMMITTER_NAME: github-actions[bot]
      GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
    steps:
      - name: Set up app token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.BOT_APPID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Merge release branch to main
        run: |
          git checkout main
          git merge --no-ff "${{ github.ref_name }}"
          git push origin main

      - name: Merge release branch to develop
        run: |
          git checkout develop
          git merge --no-ff "${{ github.ref_name }}"
          git push origin develop

      - name: Tag the main branch
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/release\///')
          git tag -a ${VERSION} -m "Release ${VERSION}"
          git push origin ${VERSION}

      - name: Delete release branch
        run: |
          git push origin --delete "${{ github.ref_name }}"